[["index.html", "Methamphetamine Use, Driving Behaviour, Aggression and Attitudes About Packages Used", " Methamphetamine Use, Driving Behaviour, Aggression and Attitudes Aaron Mackay 2021-08-23 About This document is designed to show the process of data processing, exploration and analyses that I am using on the data collected for the research project on methamphetamine use, driving behaviour, aggression and attitudes. The purpose of this document is to be transparent with how the data is screened and cleaned, explored and then analysed. As data collection is still ongoing, this document will be updated periodically when new data is made available. Packages Used The following packages were used in the processing, exploration and analyses of the data: tidyverse lubridate "],["data-processing.html", "1 Data Processing 1.1 Cleaning Data 1.2 Screening Data 1.3 Summary of Data Screened", " 1 Data Processing 1.1 Cleaning Data The following code performs the following duties: Renames variables into user-friendly names Converts character variables with set levels into factors Consolidates overlapping levels of factors into one level Calculates the scores for the following variables: Substance Dependence Severity (SDS) Scale K6 Psychiatric Inventory (TBC) Dula Dangerous Driving Index (DDDI) State Trait Anger Expression Index (STAXI-2) data.full &lt;- data.raw[c(-1, -2),] %&gt;% # Remove first two rows (contains description of variables) mutate(export_date = today(), # Demographics drivers_license = as_factor(Q126...13), drugs_other_alcohol = as_factor(Q27), age = as.numeric(Q19), sex = as_factor(Q13), ethnicity = fct_recode(as_factor(Q14), &quot;Eastern European&quot; = &quot;Southern and Eastern European (e.g. Albania, Bosnia and Herzegovina, Bulgaria, Croatia, Greece)&quot;, &quot;Oceanian&quot;= &quot;Oceanian (Australian, Aboriginal, Torres Strait Islander)&quot;, &quot;Undisclosed&quot; = &quot;Prefer not to say&quot;, &quot;North-West European&quot; = &quot;North-West European (e.g. UK, Ireland, France, Germany, Spain, Belgium, Portugal, Austria, Andorra, Czechia)&quot;, &quot;Central Asian&quot; = &quot;Southern and Central Asian (e.g. Afghanistan, Bangladesh, Bhutan, India, Kyrgyzstan, Kazakhstan, Maldives, Nepal, Pakistan, Sri Lanka)&quot;, &quot;Asian&quot; = &quot;North-East Asian (e.g. China, Japan, North Korea, South Korea, Mongolia)&quot;, &quot;American&quot; = &quot;People of the Americas (e.g. indigenous peoples of the Americas are the pre-Columbian peoples of North, Central and South America)&quot;, &quot;Middle-East&quot; = &quot;North African and Middle Eastern (e.g. Egypt, and Turkey)&quot;, &quot;South-East Asian&quot; = &quot;South-East Asian (e.g. Cambodia, Indonesia, Laos, Malaysia, the Philippines, Singapore, Thailand and Vietnam)&quot;, &quot;African&quot; = &quot;Sub-Saharan African (e.g. Botswana,Cameroon, Central African Republic, Congo, Ethiopia, Ghana, Guinea, Kenya, Liberia, Namibia, Nigeria)&quot; ), marital_status = as_factor(Q15), education = fct_recode(as_factor(Q20), &quot;Did not finish high school&quot; = &quot;Attended high school but did not finish&quot;, &quot;High School Diploma&quot; = &quot;High School Diploma&quot;, &quot;Vocational/Technical degree or certificate&quot; = &quot;Vocational/Technical degree or certificate&quot;, &quot;Did not finish University&quot; = &quot;Attended University but did not finish&quot;, &quot;Bachelor Degree&quot; = &quot;Bachelor Degree&quot;, &quot;Postgraduate Degree&quot; = &quot;Masters Degree&quot;, &quot;Postgraduate Degree&quot; = &quot;Postgraduate Degree&quot; ), employment_status = as_factor(Q17), area_live = as_factor(Q21), license_status = as_factor(Q22), # Alcohol Use alcohol_ever = as_factor(Q28), alcohol_past_12_least_12 = as_factor(Q29), alcohol_frequency = as_factor(Q33...40), alcohol_consumption = as_factor(Q31), alcohol_six_or_more = as_factor(Q32), # Drug Use drug_use_cocaine = fct_recode(as_factor(Q63_1), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), drug_use_cannabis = fct_recode(as_factor(Q63_2), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS,Neither/not used&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), drug_use_club_drugs = fct_recode(as_factor(Q63_3), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), drug_use_hallucinogens = fct_recode(as_factor(Q63_4), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO,Neither/not used&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), drug_use_inhalants = fct_recode(as_factor(Q63_5), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), drug_use_heroin = fct_recode(as_factor(Q63_6), &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot; ), drug_use_sedatives = fct_recode(as_factor(Q63_7), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), drug_use_new_psychoactive = fct_recode(as_factor(Q63_8), &quot;Never&quot; = &quot;Neither/not used&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO&quot;, &quot;Before 12 months&quot; = &quot;BEFORE 12 MONTHS AGO,Neither/not used&quot;, &quot;Past 12 months&quot; = &quot;PAST 12 MONTHS&quot;, &quot;Both&quot; = &quot;PAST 12 MONTHS,BEFORE 12 MONTHS AGO&quot; ), prescription_drugs = as_factor(Q64), prescription_drug_use = as_factor(Q144), # Will need to consolidate levels pres_use_pain_killer_pres = as_factor(Q125_1), # Off-label prescription drug use, prescription pain killer pres_use_pain_killer_otc = as_factor(Q125_2), # Off-label prescription drug use, over the counter pres_use_sleeping_pill = as_factor(Q125_3), pres_use_methadone = as_factor(Q125_4), pres_use_ritalin = as_factor(Q125_5), # MA use meth_ingest = as_factor(Q47), meth_most_common = as_factor(Q48), meth_use_at_peak = as_factor(Q49), meth_last_12_months = as_factor(Q50), meth_before_last_year = as_factor(Q51), meth_recent_use = as_factor(Q52), meth_use_age = fct_recode(as_factor(Q53), &quot;25&quot; = &quot;25 years old.&quot;), meth_use_ways = Q54, # Think about how to organise factors ## SDS Scale (Re-scored to not use zero as R is weird with zeros) meth_out_of_control = as.numeric(fct_recode(as_factor(Q55), &quot;1&quot; = &quot;Never or almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Always&quot;) ), meth_anxious_about_missing = as.numeric(fct_recode(as_factor(Q56), &quot;1&quot; = &quot;Never or almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Always&quot;) ), meth_worry_about_use = as.numeric(fct_recode(as_factor(Q57), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;A little&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Always or nearly always&quot;) ), meth_wish_stop = as.numeric(fct_recode(as_factor(Q58), &quot;1&quot; = &quot;Never or almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Always&quot;) ), meth_difficulty_stopping = as.numeric(fct_recode(as_factor(Q60), &quot;1&quot; = &quot;Not difficult at all&quot;, &quot;2&quot; = &quot;Quite difficult&quot;, &quot;3&quot; = &quot;Very difficult&quot;, &quot;4&quot; = &quot;Impossible&quot;) ), meth_SDS = ((meth_out_of_control - 1) + (meth_anxious_about_missing - 1) + (meth_worry_about_use - 1) + (meth_wish_stop - 1) + (meth_difficulty_stopping - 1)), meth_user = ifelse(meth_SDS &gt; 4, &quot;MUD&quot;, &quot;Recreational&quot;), meth_want_to_change = as_factor(Q61), meth_could_change = as_factor(Q62), # K6 Distress scale k6_nervous = as_factor(Q33...58), k6_hopeless = as_factor(Q34), k6_restless = as_factor(Q35), k6_depressed = as_factor(Q44), k6_effort = as_factor(Q36), k6_worthless = as_factor(Q37), k6_physical_cause = as_factor(Q43), # Add psychiatric diagnoses (consolidate levels) psychiatric_diagnoses = fct_recode(as_factor(Q46), # I think it might be best to have separate columns for each diagnosis. &quot;Major Depressive Disorder&quot; = &quot;Major Depressive Disorder (MDD)&quot;, &quot;Bipolar Disorder&quot; = &quot;Bipolar I Disorder&quot;, &quot;Bipolar Disorder&quot; = &quot;Bipolar II Disorder&quot;, &quot;Eating Disorder&quot; = &quot;Anorexia Nervosa&quot;, &quot;Eating Disorder&quot; = &quot;Binge-eating disorder&quot;, &quot;Eating Disorder&quot; = &quot;Bulimia Nervosa&quot;, &quot;Personality Disorder&quot; = &quot;Borderline Personality Disorder (BPD)&quot;, &quot;PTSD&quot; = &quot;Post Traumatic Stress Disorder (PTSD)&quot;, &quot;Attention Deficit Disorder&quot; = &quot;Attention Deficit Disorder (ADD)&quot;, &quot;Attention Deficit Disorder&quot; = &quot;Attention Deficit Hyperactivity Disorder (ADHD)&quot; ), # Instances Driving Under Influence of Alcohol (DUI) DUI_suspended = as_factor(Q95), DUI_hurt = as_factor(Q96), # Attitudes toward Drink Driving DUI_attitude_friends = as.numeric(fct_recode(as_factor(Q97), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly Agree&quot;) ), DUI_attitude_drunk = as.numeric(fct_recode(as_factor(Q98), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly Agree&quot;) ), DUI_attitude_jail = as.numeric(fct_recode(as_factor(Q99), &quot;1&quot; = &quot;Strongly Agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUI_attitude_strict = as.numeric(fct_recode(as_factor(Q100), &quot;1&quot; = &quot;Strongly Agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUI_attitude_tough = as.numeric(fct_recode(as_factor(Q101), &quot;1&quot; = &quot;Strongly Agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUI_attitude_caught = as.numeric(fct_recode(as_factor(Q102), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly Agree&quot;) ), DUI_attitude_while = as.numeric(fct_recode(as_factor(Q103), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly Agree&quot;) ), DUI_attitude_dumb = as.numeric(fct_recode(as_factor(Q104), &quot;1&quot; = &quot;Strongly Agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUI_attitude_overrated = as.numeric(fct_recode(as_factor(Q105), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly Agree&quot;) ), DUI_attitude_license = as.numeric(fct_recode(as_factor(Q106), &quot;1&quot; = &quot;Strongly Agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), # Attitudes towards strategies for avoiding Drink Driving: Discrete DUI_strategy_leave = as.numeric(fct_recode(as_factor(Q107), &quot;1&quot; = &quot;Definitely yes&quot;, &quot;2&quot; = &quot;Probably yes&quot;, &quot;3&quot; = &quot;Might or might not&quot;, &quot;4&quot; = &quot;Probably not&quot;, &quot;5&quot; = &quot;Definitely not&quot;) ), DUI_strategy_light = as.numeric(fct_recode(as_factor(Q108), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_plan_driver = as.numeric(fct_recode(as_factor(Q109), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_plan_use = as.numeric(fct_recode(as_factor(Q110), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_taxi = as.numeric(fct_recode(as_factor(Q111), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_track = as.numeric(fct_recode(as_factor(Q112), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_overnight = as.numeric(fct_recode(as_factor(Q113), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), # Attitudes towards strategies for avoiding Drink Driving: Dichotomous DUI_strategy_leave_dich = as.numeric(fct_recode(as_factor(Q107), &quot;agree&quot; = &quot;Definitely yes&quot;, &quot;agree&quot; = &quot;Probably yes&quot;, &quot;disagree&quot; = &quot;Might or might not&quot;, &quot;disagree&quot; = &quot;Probably not&quot;, &quot;disagree&quot; = &quot;Definitely not&quot;) ), DUI_strategy_light_dich = as.numeric(fct_recode(as_factor(Q108), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_plan_driver_dich = as.numeric(fct_recode(as_factor(Q109), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_plan_use_dich = as.numeric(fct_recode(as_factor(Q110), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_taxi_dich = as.numeric(fct_recode(as_factor(Q111), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_track_dich = as.numeric(fct_recode(as_factor(Q112), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUI_strategy_overnight_dich = as.numeric(fct_recode(as_factor(Q113), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), # Instances Driving Under Influence of Drugs (DUID) DUID_incidence = as_factor(Q114), DUID_recent = as_factor(Q118), DUID_recent_drugs = fct_recode(as_factor(Q119), # Should Consolidate levels in a better way &quot;Amphetamine only&quot; = &quot;Amphetamine&quot;, &quot;Cocaine only&quot; = &quot;Cocaine&quot;, &quot;Marijuana only&quot; = &quot;Marijuana/Cannabis&quot;, &quot;Club drugs only&quot; = &quot;Club drugs (e.g ketamine, GHB)&quot;, &quot;Hallucinogens only&quot; = &quot;Hallucinogens/psychedelics (e.g acid, LSD, DMT)&quot;, &quot;Sedatives only&quot; = &quot;Sedatives/tranquilisers (e.g. Xanax, Valium)&quot; ), DUID_lifetime = as_factor(Q120), DUID_lifetime_drugs = Q121, # Consolidate levels DUID_ongoing = as_factor(ifelse(DUID_recent == &quot;Yes&quot; &amp; DUID_lifetime == &quot;Yes&quot;, &quot;Yes&quot;, &quot;No&quot;)), DUID_suspended = as_factor(Q122), DUID_suspended_drugs = Q124, # Consolidate levels DUID_hurt = as_factor(Q123), DUID_hurt_drugs = as_factor(Q125), # Attitudes toward Drug Driving DUID_attitude_friends = as.numeric(fct_recode(as_factor(Q126...75), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly agree&quot;) ), DUID_attitude_high = as.numeric(fct_recode(as_factor(Q128), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly agree&quot;) ), DUID_attitude_jail = as.numeric(fct_recode(as_factor(Q129), &quot;1&quot; = &quot;Strongly agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUID_attitude_strict = as.numeric(fct_recode(as_factor(Q130), &quot;1&quot; = &quot;Strongly agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUID_attitude_tough = as.numeric(fct_recode(as_factor(Q131), &quot;1&quot; = &quot;Strongly agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUID_attitude_caught = as.numeric(fct_recode(as_factor(Q132), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly agree&quot;) ), DUID_attitude_while = as.numeric(fct_recode(as_factor(Q133), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly agree&quot;) ), DUID_attitude_dumb = as.numeric(fct_recode(as_factor(Q134), &quot;1&quot; = &quot;Strongly agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), DUID_attitude_overrated = as.numeric(fct_recode(as_factor(Q135), # Reverse coded &quot;1&quot; = &quot;Strongly disagree&quot;, &quot;2&quot; = &quot;Disagree&quot;, &quot;3&quot; = &quot;Somewhat disagree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat agree&quot;, &quot;6&quot; = &quot;Agree&quot;, &quot;7&quot; = &quot;Strongly agree&quot;) ), DUID_attitude_license = as.numeric(fct_recode(as_factor(Q136), &quot;1&quot; = &quot;Strongly agree&quot;, &quot;2&quot; = &quot;Agree&quot;, &quot;3&quot; = &quot;Somewhat agree&quot;, &quot;4&quot; = &quot;Neither agree nor disagree&quot;, &quot;5&quot; = &quot;Somewhat disagree&quot;, &quot;6&quot; = &quot;Disagree&quot;, &quot;7&quot; = &quot;Strongly disagree&quot;) ), # Attitudes towards strategies for avoiding Drug Driving: Discrete DUID_strategy_leave = as.numeric(fct_recode(as_factor(Q137), &quot;1&quot; = &quot;Definitely yes&quot;, &quot;2&quot; = &quot;Probably yes&quot;, &quot;3&quot; = &quot;Might or might not&quot;, &quot;4&quot; = &quot;Probably not&quot;, &quot;5&quot; = &quot;Definitely not&quot;) ), DUID_strategy_less = as.numeric(fct_recode(as_factor(Q138), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_plan_driver = as.numeric(fct_recode(as_factor(Q139), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_plan_use = as.numeric(fct_recode(as_factor(Q140), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_taxi = as.numeric(fct_recode(as_factor(Q141), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_track = as.numeric(fct_recode(as_factor(Q142), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_overnight = as.numeric(fct_recode(as_factor(Q143), &quot;1&quot; = &quot;Extremely likely&quot;, &quot;2&quot; = &quot;Moderately likely&quot;, &quot;2&quot; = &quot;Slightly likely&quot;, &quot;3&quot; = &quot;Neither likely nor unlikely&quot;, &quot;4&quot; = &quot;Slightly unlikely&quot;, &quot;4&quot; = &quot;Moderately unlikely&quot;, &quot;5&quot; = &quot;Extremely unlikely&quot;) ), # Attitudes towards strategies for avoiding Drug Driving: Dichotomous DUID_strategy_leave_dich = as.numeric(fct_recode(as_factor(Q137), &quot;agree&quot; = &quot;Definitely yes&quot;, &quot;agree&quot; = &quot;Probably yes&quot;, &quot;disagree&quot; = &quot;Might or might not&quot;, &quot;disagree&quot; = &quot;Probably not&quot;, &quot;disagree&quot; = &quot;Definitely not&quot;) ), DUID_strategy_less = as.numeric(fct_recode(as_factor(Q138), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_plan_driver = as.numeric(fct_recode(as_factor(Q139), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_plan_use = as.numeric(fct_recode(as_factor(Q140), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_taxi = as.numeric(fct_recode(as_factor(Q141), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_track = as.numeric(fct_recode(as_factor(Q142), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), DUID_strategy_overnight = as.numeric(fct_recode(as_factor(Q143), &quot;agree&quot; = &quot;Extremely likely&quot;, &quot;agree&quot; = &quot;Moderately likely&quot;, &quot;agree&quot; = &quot;Slightly likely&quot;, &quot;disagree&quot; = &quot;Neither likely nor unlikely&quot;, &quot;disagree&quot; = &quot;Slightly unlikely&quot;, &quot;disagree&quot; = &quot;Moderately unlikely&quot;, &quot;disagree&quot; = &quot;Extremely unlikely&quot;) ), # Dula Dangerous Driving Index (DDDI) DDDI_NE_1 = as.numeric(fct_recode(as_factor(Q65), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_2 = as.numeric(fct_recode(as_factor(Q66), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_3 = as.numeric(fct_recode(as_factor(Q67), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_1 = as.numeric(fct_recode(as_factor(Q68), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_2 = as.numeric(fct_recode(as_factor(Q69), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_3 = as.numeric(fct_recode(as_factor(Q70), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_4 = as.numeric(fct_recode(as_factor(Q73), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_1 = as.numeric(fct_recode(as_factor(Q74), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_5 = as.numeric(fct_recode(as_factor(Q75), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_2 = as.numeric(fct_recode(as_factor(Q76), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_6 = as.numeric(fct_recode(as_factor(Q77), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_4 = as.numeric(fct_recode(as_factor(Q79), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_3 = as.numeric(fct_recode(as_factor(Q80), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_4 = as.numeric(fct_recode(as_factor(Q81), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_AD_7 = as.numeric(fct_recode(as_factor(Q82), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_5 = as.numeric(fct_recode(as_factor(Q83), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_6 = as.numeric(fct_recode(as_factor(Q84), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_7 = as.numeric(fct_recode(as_factor(Q85), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_5 = as.numeric(fct_recode(as_factor(Q86), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_6 = as.numeric(fct_recode(as_factor(Q87), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_8 = as.numeric(fct_recode(as_factor(Q88), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_7 = as.numeric(fct_recode(as_factor(Q89), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_8 = as.numeric(fct_recode(as_factor(Q90), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_9 = as.numeric(fct_recode(as_factor(Q91), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_NE_9 = as.numeric(fct_recode(as_factor(Q92), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_10 = as.numeric(fct_recode(as_factor(Q93), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), DDDI_RD_11 = as.numeric(fct_recode(as_factor(Q94), &quot;1&quot; = &quot;Never&quot;, &quot;2&quot; = &quot;Rarely&quot;, &quot;3&quot; = &quot;Sometimes&quot;, &quot;4&quot; = &quot;Often&quot;, &quot;5&quot; = &quot;Always&quot;) ), ## DDDI summing up scores DDDI_NE_Total = (DDDI_NE_1 + DDDI_NE_2 + DDDI_NE_3 + DDDI_NE_4 + DDDI_NE_5 + DDDI_NE_6 + DDDI_NE_7 + DDDI_NE_8 + DDDI_NE_9), # Negative Emotions DDDI_AD_Total = (DDDI_AD_1 + DDDI_AD_2 + DDDI_AD_3 + DDDI_AD_4 + DDDI_AD_5 + DDDI_AD_6 + DDDI_AD_7), # Agressive Driving DDDI_RD_Total = (DDDI_RD_1 + DDDI_RD_2 + DDDI_RD_3 + DDDI_RD_4 + DDDI_RD_5 + DDDI_RD_6 + DDDI_RD_7 + DDDI_RD_8 + DDDI_RD_9 + DDDI_RD_10 + DDDI_RD_11), # Risky Driving DDDI_Total = (DDDI_NE_Total + DDDI_AD_Total + DDDI_RD_Total), keep_DDDI = !is.na(DDDI_Total), # Logical to indicate whether DDDI has been completed # STAXI - 2 ## State Anger S_Ang_F_1 = as.numeric(fct_recode(as_factor(Q146_1), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_F_2 = as.numeric(fct_recode(as_factor(Q146_2), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_F_3 = as.numeric(fct_recode(as_factor(Q146_3), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_V_1 = as.numeric(fct_recode(as_factor(Q146_4), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_P_1 = as.numeric(fct_recode(as_factor(Q146_5), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_F_4 = as.numeric(fct_recode(as_factor(Q146_6), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_P_2 = as.numeric(fct_recode(as_factor(Q146_7), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_P_3 = as.numeric(fct_recode(as_factor(Q146_8), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_V_2 = as.numeric(fct_recode(as_factor(Q146_9), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_F_5 = as.numeric(fct_recode(as_factor(Q146_10), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_P_4 = as.numeric(fct_recode(as_factor(Q146_11), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_V_3 = as.numeric(fct_recode(as_factor(Q146_12), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_V_4 = as.numeric(fct_recode(as_factor(Q146_13), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_P_5 = as.numeric(fct_recode(as_factor(Q146_14), &quot;1&quot; = &quot;Not at all&quot;, &quot;2&quot; = &quot;Somewhat&quot;, &quot;3&quot; = &quot;Moderately so&quot;, &quot;4&quot; = &quot;Very much so&quot;) ), S_Ang_F_Total = (S_Ang_F_1 + S_Ang_F_2 + S_Ang_F_3 + S_Ang_F_4 + S_Ang_F_5), S_Ang_P_Total = (S_Ang_P_1 + S_Ang_P_2 + S_Ang_P_3 + S_Ang_P_4 + S_Ang_P_5), S_Ang_V_Total = (S_Ang_V_1 + S_Ang_V_2 + S_Ang_V_3 + S_Ang_V_4), S_Ang_Total = (S_Ang_F_1 + S_Ang_F_2 + S_Ang_F_3 + S_Ang_F_4 + S_Ang_F_5 + S_Ang_P_1 + S_Ang_P_2 + S_Ang_P_3 + S_Ang_P_4 + S_Ang_P_5 + S_Ang_V_1 + S_Ang_V_2 + S_Ang_V_3 + S_Ang_V_4), ## Trait Anger T_Ang_T_1 = as.numeric(fct_recode(as_factor(Q147_1), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Almost always&quot;) ), T_Ang_T_2 = as.numeric(fct_recode(as_factor(Q147_2), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Sometimes,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;) ), T_Ang_T_3 = as.numeric(fct_recode(as_factor(Q147_3), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Sometimes,Often&quot;, &quot;3&quot; = &quot;Almost never,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;, &quot;4&quot; = &quot;Sometimes,Often,Almost always&quot;) ), T_Ang_R_1 = as.numeric(fct_recode(as_factor(Q147_4), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Sometimes,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;) ), T_Ang_R_2 = as.numeric(fct_recode(as_factor(Q147_5), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Almost never,Sometimes,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;) ), T_Ang_T_4 = as.numeric(fct_recode(as_factor(Q147_6), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Almost always&quot;, &quot;4&quot; = &quot;Often,Almost always&quot;) ), T_Ang_1 = as.numeric(fct_recode(as_factor(Q147_7), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Sometimes,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;, &quot;4&quot; = &quot;Sometimes,Often,Almost always&quot;) ), T_Ang_R_3 = as.numeric(fct_recode(as_factor(Q147_8), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Almost never,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;) ), T_Ang_2 = as.numeric(fct_recode(as_factor(Q147_9), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;4&quot; = &quot;Almost always&quot;, &quot;4&quot; = &quot;Often,Almost always&quot;) ), T_Ang_R_4 = as.numeric(fct_recode(as_factor(Q147_10), &quot;1&quot; = &quot;Almost never&quot;, &quot;2&quot; = &quot;Sometimes&quot;, &quot;2&quot; = &quot;Almost never,Sometimes&quot;, &quot;3&quot; = &quot;Often&quot;, &quot;3&quot; = &quot;Sometimes,Often&quot;, &quot;3&quot; = &quot;Almost never,Sometimes,Often&quot;, &quot;3&quot; = &quot;Almost never,Often&quot;, &quot;4&quot; = &quot;Almost always&quot;, &quot;4&quot; = &quot;Often,Almost always&quot;) ), T_Ang_T_Total = (T_Ang_T_1 + T_Ang_T_2 + T_Ang_T_3 + T_Ang_T_4), T_Ang_R_Total = (T_Ang_R_1 + T_Ang_R_2 + T_Ang_R_3 + T_Ang_R_4), T_Ang_Total = (T_Ang_T_1 + T_Ang_T_2 + T_Ang_T_3 + T_Ang_T_4 + T_Ang_R_1 + T_Ang_R_2 + T_Ang_R_3 + T_Ang_R_4 + T_Ang_1 + T_Ang_2) ); 1.2 Screening Data The following code screens the data by removing the following responses: Responses that did not have a current or expired/revoked full drivers license Responses that did not have a completed STAXI Responses that did not have a completed DDDI # Creating screened data set screened.full &lt;- data.full %&gt;% filter(#[Not needed] Status != &quot;Spam&quot;, # Remove spam Q126...13 %in% c(&quot;Full license (current/valid)&quot;, &quot;Full license (expired/revoked)&quot;), # Removing responses that are not full license !is.na(S_Ang_Total), # Removing responses that have incomplete State Anger !is.na(T_Ang_Total), # Removing responses that have incomplete Trait Anger keep_DDDI == &quot;TRUE&quot;) %&gt;% # Select only observations that have completed DDDI mutate(id = row_number()) # Assign a number to each participant screened &lt;- screened.full[164:ncol(screened.full)] %&gt;% # Select only variables that have been re-coded select(id, everything()); # Moving participant id to front of data frame 1.3 Summary of Data Screened The table below outlines how many observations did not meet any combination of the criteria laid out above. TRUE means that there was a response recorded for that item. (#tab:processing.summary)Table 1. Number of Observations Removed by group License S_Ang_Total T_Ang_Total DDDI_Total n Probationary License TRUE TRUE TRUE 1 Probationary License NA NA NA 40 Full License TRUE TRUE NA 9 Full License NA NA TRUE 2 Full License NA NA NA 213 Learners License NA NA NA 34 NA NA NA NA 193 "],["Descriptives.html", "2 Descriptives 2.1 Demographic Summary Table 2.2 Distribution of Demographics 2.3 Bivariate distribution of key variables", " 2 Descriptives 2.1 Demographic Summary Table Overall(N=245) Age Mean (SD) 30.6 (6.71) Median [Min, Max] 29.0 [18.0, 50.0] Sex Female 98 (40.0%) Male 147 (60.0%) MA Ingest Yes 58 (23.7%) No 187 (76.3%) MA User Type Recreational 6 (2.4%) MUD 52 (21.2%) Non-User 187 (76.3%) License Status Valid/current 245 (100%) Former/lapsed 0 (0%) Education Did not finish high school 7 (2.9%) High School Diploma 30 (12.2%) Vocational/Technical degree or certificate 44 (18.0%) Did not finish University 67 (27.3%) Bachelor Degree 77 (31.4%) Postgraduate Degree 20 (8.2%) Ethnicity North-West European 101 (41.2%) American 74 (30.2%) Oceanian 40 (16.3%) Eastern European 10 (4.1%) Undisclosed 7 (2.9%) South-East Asian 7 (2.9%) Central Asian 2 (0.8%) Middle-East 2 (0.8%) Asian 1 (0.4%) African 1 (0.4%) Area of Residence Rural 10 (4.1%) Suburban 99 (40.4%) Urban/Inner-city 136 (55.5%) 2.2 Distribution of Demographics 2.2.1 MA Use 2.2.2 Sex 2.2.3 Age 2.2.4 Education 2.2.5 Ethnicity 2.2.6 Area of Residence 2.3 Bivariate distribution of key variables 2.3.1 Dula Dangerous Driving Index (DDDI) 2.3.1.1 About The DDDI includes 28\\(^*\\) items (divided into 3 categorical subscales) with each item assessing a persons tendency to engage in certain driving practices or beliefs held around specific driving behaviours. Each item is scored on a 5-point Likert scale from 1 (Never) to 5 (Always). The total score can be used as a composite measure for ones tendency and/or willingness to engage in dangerous driving. Scores can range from 27 to 135. 2.3.1.1.1 Subscales: Aggressive Driving: Assessed with 7 items which reflect behaviours that are intentionally meant to annoy, irritate or punish other drivers. E.g. I flash my headlights when I am annoyed by another driver. Scores range from 7 to 35. Negative Emotional Driving: Assessed with 9 items which gauge irritability and anger while driving and the tendency to become annoyed with other drivers. E.g. I lose my temper while driving. Scores range from 9 to 45. Risky Driving: Assessed with 11 items which gauge ones willingness to engage in unsafe driving behaviours. E.g. I will drag race other drivers at stop lights to get out front. Scores range from 11 to 55. \\(^*\\)The present study used 27 items with one item from the Risky Driving subscale - I will weave in and out of slower traffic - omitted from the questionnaire. 2.3.1.2 Total Score 2.3.1.3 Aggressive Driving 2.3.1.4 Negative Emotional Driving 2.3.1.5 Risky Driving 2.3.2 STAXI-2 2.3.2.1 About The State-Trait Anger Expression Inventory (STAXI-2) is designed to understand the attitudes, emotional states and behaviours that are typical to a person in regard to their feelings, control and expression of anger. It distinguishes anger between being a passing/present state as a personality trait. Description of scoring 2.3.2.1.1 State Anger Assesses the intensity of the individuals angry feelings at time of testing. 2.3.2.1.2 Subscales: Feeling Angry (S-Ang/F): TBC Feel like verbally expressing anger (S-Ang/V): TBC Feel like physically expressing anger (A-Ang/P): TBC 2.3.2.2 State Anger Total 2.3.2.3 Trait Anger Total "],["parts.html", "3 Parts", " 3 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "4 Footnotes and citations 4.1 Footnotes 4.2 Citations", " 4 Footnotes and citations 4.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one.1 4.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2021) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["blocks.html", "5 Blocks 5.1 Equations 5.2 Theorems and proofs 5.3 Callout blocks", " 5 Blocks 5.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{5.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (5.1). 5.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 5.1. Theorem 5.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 5.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "6 Sharing your book 6.1 Publishing 6.2 404 pages 6.3 Metadata for sharing", " 6 Sharing your book 6.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 6.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If youd like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 6.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your books title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your books source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapters source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
